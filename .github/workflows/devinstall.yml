name: Run the dev-install script

on:
  push:
    branches: master
  pull_request:
    branches: '*'

jobs:
  devinstall:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install node
      uses: actions/setup-node@v1
      with:
       node-version: 12.x
    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
        architecture: 'x64'
    - name: Cache pip on Linux
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache yarn
      uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: |
        python -m pip install notebook jupyterlab~=3.0 jupyter_packaging~=0.10
    - name: Run the dev-install script
      run: |
        ./dev-install.sh
        jupyter nbextension list
        jupyter labextension list

        python -m jupyterlab.browser_check
